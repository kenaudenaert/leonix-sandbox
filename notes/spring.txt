Spring
======

https://en.wikipedia.org/wiki/Spring_Framework

https://spring.io/projects/spring-framework

https://spring.io/guides --> look for a way to get started !!

SPRING-CORE
-----------
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/index.html
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/overview.html#overview
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#spring-core

Spring 2.5 added support for JSR-250 annotations such as @PostConstruct and @PreDestroy.
Spring 3.0 added support for JSR-330 annotations such as @Inject and @Named.

Like @Resource, the @PostConstruct and @PreDestroy annotation types were a part of the standard
Java libraries from JDK 6 to 8. However, the entire javax.annotation package got separated from
the core Java modules in JDK 9 and eventually removed in JDK 11. (use jakarta-annotations-api).

https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-standard-annotations-limitations
	@Inject, @Named
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-java
	@Bean, @Configuration
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-environment
	@Profile, @PropertySource
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#null-safety
	@NonNull, @NonNullApi, @NonNullFields, @Nullable

SPRING-TEST
-----------
https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/testing.html#testing

Spring-Core Summary
===================
[spring-beans.jar]
	org.springframework.beans.factory.annotation:
		annotation: @Autowired   (similar to javax.inject.@Inject)
		annotation: @Qualifier   (similar to javax.inject.@Named)
		annotation: @Value       (reference value from properties)

[spring-context.jar]
	org.springframework.context:
		interface: ApplicationContext (and related interfaces)
		
	org.springframework.context.annotation:
		annotation: @Bean                (configuration by annotation)
		annotation: @Configuration       (configuration by annotation)
		annotation: @ComponentScan(s)    (location of components)
		annotation: @PropertySource(s)   (location of properties)
		annotation: @Import              (import configuration beans)
		annotation: @ImportResource      (import configuration files)
		
		annotation: @Conditional         (specify creation condition)
		annotation: @Profile             (only creation when profile)
		annotation: @DependsOn           (specify creation ordering)
		annotation: @Lazy                (specify lazy creation)
		annotation: @Primary             (specify preferred bean)
		annotation: @Scope               (a bean can have a scope)
		
	org.springframework.context.support:
		class: AnnotationConfigWebApplicationContext
			(and other ApplicationContext implementations)
			
	org.springframework.stereotype:
		annotation: @Component
		annotation: @Controller   (stereotype for frontend-layer)
		annotation: @Repository   (stereotype for backend-layer)
		annotation: @Service      (stereotype for service-layer)

Spring-Test Summary
===================
[spring-test.jar]
	org.springframework.test.annotation:
		annotation: @DirtiesContext (do not reuse context, since modified)
		
	org.springframework.test.context:
		annotation: @ActiveProfiles         (specify active profiles for testing)
		annotation: @ContextConfiguration   (specify context configuration classes)
		annotation: @TestPropertySource(s)  (override all properties for testing)
		
	org.springframework.test.context.junit.jupiter:
		annotation: @SpringJUnitConfig
			(@ExtendWith(SpringExtension.class) + @ContextConfiguration)
			
		annotation: @DisabledIf           (conditional test(class/method)-execution)
		annotation: @DisabledIfCondition  (conditional test(class/method)-execution)
		annotation: @EnabledIf            (conditional test(class/method)-execution)
		annotation: @EnabledIfCondition   (conditional test(class/method)-execution)
		
	org.springframework.test.context.junit.jupiter.web:
		annotation: @SpringJUnitWebConfig
			(@ExtendWith(SpringExtension.class) + @ContextConfiguration + @WebAppConfiguration)
